# -*- coding: utf-8 -*-
"""Анализируем успеваемость студентов с помощью базового Python.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TV1UxzCs5IrqL-bRCX2C9VSKW-2fqFd5

### Загружаем данные
"""

!wget https://gist.githubusercontent.com/andron23/e2a391ee5e1c1b9aa5697af3ab129b91/raw/ec64c8f0a0d4e73da992bd47e2b346ef72d893fb/students_activity.txt

"""### Формируем датасет"""

with open('students_activity.txt', 'r') as f:
  data = f.read()

data[:500]

data = data.split("\n")

data[0]

for i, row in enumerate(data):
  data[i] = row.split(';')

data

"""### Общий прогресс студента

Всего заданий на курсе - 180
"""

data[:2]

scores = {}

for row in data[1:]:
  user = row[1]
  problem = row[2]
  is_correct = 1 - eval(row[3])

  if not is_correct or row[-2] == 'Simple':
    continue

  if user not in scores:
    scores[user] = set(problem)
  else:
    scores[user].add(problem)

scores

for k, v in scores.items():
  scores[k] = f'{round(len(v) / 180 * 100, 1)}%'

scores

dict(sorted(scores.items(), key=lambda x: eval(x[1][:-1]), reverse=True))

"""### Табель с успеваемостью студентов"""

data[:2]

problems = set()

for row in data[1:]:
  if row[-2] == 'Homework':
    problems.add(row[2])

len(problems)

marks = {}

for row in data[1:]:
  user = row[1]
  problem = row[2]
  is_correct = 1 - eval(row[3])

  if not is_correct or row[-2] != 'Homework':
    continue

  if user in marks:
    marks[user].add(problem)
  else:
    marks[user] = set(problem)

marks

users = set()

for row in data[1:]:
  users.add(row[1])

problems = list(problems)

marks_for_print = {}

for user in users:
  for problem in problems:
    is_solved = 'v' if problem in marks.get(user, []) else 'x'
    if not user in marks_for_print:
      marks_for_print[user] = [is_solved]
    else:
      marks_for_print[user].append(is_solved)

marks_for_print

max([len(x) for x in users])

max([len(x) for x in problems])

'user_id  ' + "| ".join([id + " "*(5 - len(id)) for id in problems])

res = []

for k, v in marks_for_print.items():
  s = k + ' '*(9 - len(k))
  s += "   |   ".join(v)
  res.append(s)

res.insert(0, 'user_id' + "| ".join([id + " "*(6 - len(id)) for id in problems]))

print('\n'.join(res))

"""### Проверяем название домашек"""

data[:2]

for row in data[1:]:
  if row[-2] == 'Homework':
    language = row[-1]
    name = row[-3]
    if language not in name:
      print('Название задачи некорректное!')

"""### Распределение попыток"""

