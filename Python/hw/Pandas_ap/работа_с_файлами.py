# -*- coding: utf-8 -*-
"""Работа с файлами.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CqADXAdImiAQ9VIYYzYGdwIuiXQrAF7K

Открытие файла для чтения:
"""

with open('file.txt', 'r') as file:
    content = file.read()

"""Чтение по строкам:"""

with open('file.txt', 'r') as file:
    for line in file:
        print(line)

"""Запись в файл:"""

with open('output.txt', 'w') as file:
    file.write('Это текст, который будет записан в файл.')

"""Добавление в файл:"""

with open('output.txt', 'a') as file:
    file.write('Это будет добавлено в конец файла.')

"""Чтение и запись в бинарных файлах:"""

with open('binary.bin', 'rb') as file:
    binary_data = file.read()

with open('output.bin', 'wb') as file:
    file.write(binary_data)

"""Работа с контекстом:"""

# Открываем файл для чтения в контексте
with open('example.txt', 'r') as file:
    # Внутри этого блока контекста файл открыт
    content = file.read()
    # Вы можете выполнять операции с файлом внутри контекста

# Здесь, вне контекста, файл автоматически закрыт
# Вы можете продолжить выполнять операции без работы с файлом
print(content)

"""Чтение и запись в другой файл:"""

with open('input.txt', 'r') as input_file, open('output.txt', 'w') as output_file:
    for line in input_file:
        # Модифицируйте данные, если необходимо
        modified_line = line.upper()
        output_file.write(modified_line)

"""Использование контекста с обработкой исключений:"""

try:
    with open('example.txt', 'r') as file:
        content = file.read()
    # Выполняйте операции с данными
except FileNotFoundError:
    print('Файл не найден')

"""Считывание всего файла в список строк:


"""

with open('example.txt', 'r') as file:
    lines = file.readlines()

"""Проверка наличия файла:


"""

import os

if os.path.exists('file.txt'):
    print('Файл существует')

"""Удаление файла:


"""

import os

if os.path.exists('file.txt'):
    os.remove('file.txt')

"""Создание директории:


"""

import os

if not os.path.exists('my_directory'):
    os.mkdir('my_directory')

"""Список файлов в директории:


"""

import os

file_list = os.listdir('my_directory')
for filename in file_list:
    print(filename)

"""Использование библиотеки shutil для работы с файлами

Копирование файлов и директорий:
"""

import shutil

shutil.copy('source.txt', 'destination.txt')  # Копирование файла
shutil.copytree('source_dir', 'destination_dir')  # Копирование директории и её содержимого

"""Перемещение файлов и директорий:


"""

import shutil

shutil.move('source.txt', 'new_location/source.txt')  # Перемещение файла

"""Удаление файлов и директорий:


"""

import shutil

shutil.rmtree('directory_to_delete')  # Удаление директории и её содержимого

"""Переименование файлов и директорий:"""

import shutil

shutil.move('old_name.txt', 'new_name.txt')  # Переименование файла

"""Архивация и разархивация файлов и директорий:


"""

import shutil

shutil.make_archive('my_archive', 'zip', 'directory_to_archive')  # Создание ZIP-архива
shutil.unpack_archive('my_archive.zip', 'extracted_directory')  # Разархивация

"""Копирование атрибутов файлов:


"""

import shutil

shutil.copystat('source.txt', 'destination.txt')  # Копирование атрибутов файла

"""Сравнение файлов и директорий:


"""

import filecmp

result = filecmp.cmp('file1.txt', 'file2.txt')  # Сравнение файлов

"""Сжатие и распаковка файлов:


"""

import shutil

shutil.make_archive('my_archive', 'gztar', 'directory_to_archive')  # Создание tar.gz-архива
shutil.unpack_archive('my_archive.tar.gz', 'extracted_directory')  # Распаковка

"""Использование библиотеки os для работы с файлами

Получение текущей директории:
"""

import os

current_directory = os.getcwd()

"""Изменение текущей директории:


"""

import os

os.chdir('/путь/к/новой/директории')

"""Создание директории:


"""

import os

os.mkdir('/путь/к/новой/директории')

"""Создание директорий рекурсивно (с вложенными поддиректориями):


"""

import os

os.makedirs('/путь/к/новой/директории/с/вложенными/поддиректориями', exist_ok=True)

"""Переименование файла или директории:


"""

import os

os.rename('старое_имя.txt', 'новое_имя.txt')

"""Удаление файла:


"""

import os

os.remove('файл_для_удаления.txt')

"""Удаление директории:


"""

import os

os.rmdir('/путь/к/директории')

"""Удаление директории и её содержимого рекурсивно:


"""

import os

os.removedirs('/путь/к/директории/с/вложенными/поддиректориями')

"""Проверка существования файла или директории:


"""

import os

exists = os.path.exists('путь/к/файлу_или_директории')

"""Получение списка файлов и директорий в директории:


"""

import os

file_list = os.listdir('/путь/к/директории')

"""Разделение пути файла на каталог и имя файла:


"""

import os

directory, filename = os.path.split('/путь/к/файлу')

"""Получение абсолютного пути к файлу или директории:


"""

import os

absolute_path = os.path.abspath('относительный/путь')

"""Получение информации о файле (размер, время модификации и другие атрибуты):


"""

import os

file_info = os.stat('файл.txt')

"""Создание символической ссылки:


"""

import os

os.symlink('ссылка_на_файл.txt', 'символическая_ссылка.txt')